{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exam2-thang","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPVegcDmMGCYe6z4Gly3qnR"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"amyA4Rwv1Gug","colab_type":"code","colab":{}},"source":["# Test #2:\n","\n","# Create a classifier for the Fashion MNIST dataset\n","# Note that the test will expect it to classify 10 classes and that the\n","# input shape should be the native size of the Fashion MNIST dataset which is\n","# 28x28 monochrome. Do not resize the data. YOur input layer should accept\n","# (28,28) as the input shape only. If you amend this, the tests will fail.\n","#\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","\n","def solution_model():\n","    fashion_mnist = tf.keras.datasets.fashion_mnist\n","    (train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()\n","\n","    # Normalize\n","    train_images = train_images / 255.0\n","    test_images = test_images / 255.0\n","\n","    # YOUR CODE HERE\n","    model = tf.keras.models.Sequential([\n","        keras.layers.Flatten(input_shape=(28, 28)),\n","        keras.layers.Dense(128, activation='relu'),\n","        tf.keras.layers.Dropout(0.2),\n","        tf.keras.layers.Dense(10, activation='softmax'),\n","    ])\n","\n","    # Loss function and optimization\n","    model.compile(optimizer='adam',\n","                  loss='sparse_categorical_crossentropy',\n","                  metrics=['accuracy'])\n","    model.summary()\n","    # Training model\n","    model.fit(train_images, train_labels, epochs=20)\n","\n","    return model\n","\n","\n","# Note that you'll need to save your model as a .h5 like this\n","# This .h5 will be uploaded to the testing infrastructure\n","# and a score will be returned to you\n","if __name__ == '__main__':\n","    model = solution_model()\n","    model.save(\"mymodel.h5\")"],"execution_count":null,"outputs":[]}]}