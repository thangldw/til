{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exam1-thang","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMjBJP3fFZnTBbuggoJsh5T"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"aJnn9bZb09-S","colab_type":"code","colab":{}},"source":["# ======================================================================\n","# There are 5 questions in this exam with increasing difficulty from 1-5.\n","# Please note that the weight of the grade for the question is relative\n","# to its difficulty. So your Category 1 question will score significantly\n","# less than your Category 5 question.\n","#\n","# Don't use lambda layers in your model.\n","# You do not need them to solve the question.\n","# Lambda layers are not supported by the grading infrastructure.\n","#\n","# You must use the Submit and Test model button to submit your model\n","# at least once in this category before you finally submit your exam,\n","# otherwise you will score zero for this category.\n","# ======================================================================\n","#\n","# Getting Started Question\n","#\n","# Given this data, train a neural network to match the xs to the ys\n","# So that a predictor for a new value of X will give a float value\n","# very close to the desired answer\n","# i.e. print(model.predict([10.0])) would give a satisfactory result\n","# The test infrastructure expects a trained model that accepts\n","# an input shape of [1]\n","\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","\n","def solution_model():\n","    xs = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)\n","    ys = np.array([-3.0, -1.0, 1.0, 3.0, 5.0, 7.0], dtype=float)\n","\n","    model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])\n","\n","    model.compile(optimizer='sgd', loss='mean_squared_error')\n","    model.fit(xs,ys,epochs=1000)\n","\n","    # YOUR CODE HERE\n","    return model\n","\n","# Note that you'll need to save your model as a .h5 like this.\n","# When you press the Submit and Test button, your saved .h5 model will\n","# be sent to the testing infrastructure for scoring\n","# and the score will be returned to you.\n","if __name__ == '__main__':\n","    model = solution_model()\n","    model.save(\"mymodel.h5\")\n"],"execution_count":null,"outputs":[]}]}